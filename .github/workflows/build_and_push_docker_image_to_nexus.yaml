name: Build and Push Docker image to Nexus

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.repository.name }}:${{ github.ref_name }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: üõéÔ∏è Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up JDK 21
      - name: ‚òï Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      # 3Ô∏è‚É£ Set up Gradle cache
      - name: üîß Set up Gradle
        uses: gradle/gradle-build-action@v3

      # 4Ô∏è‚É£ Build JAR with Gradle
      - name: ‚ö° Build JAR with Gradle
        run: ./gradlew bootJar

      # 5Ô∏è‚É£ Load APPNAME and VERSION from local.env and set JAR_FILE
      - name: üìÑ Load APPNAME, VERSION and set JAR_FILE
        id: load_env
        run: |
          APPNAME=$(grep APPNAME local.env | cut -d'=' -f2)
          VERSION=$(grep VERSION local.env | cut -d'=' -f2)
          echo "APPNAME=$APPNAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "JAR_FILE=build/libs/${APPNAME}-${VERSION}.jar" >> $GITHUB_ENV

      - name: üìÑ Find generated JAR
        id: find_jar
        run: |
          # Find the first JAR that contains 'tickr' in its name
          JAR_FILE=$(find . -type f -name "*.jar" | grep "tickr" | head -n1)
          if [ -z "$JAR_FILE" ]; then
            echo "Error: No JAR found!"
            exit 1
          fi
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV
          echo "Found JAR: $JAR_FILE"
          
      # 6Ô∏è‚É£ Verify JAR exists
      - name: ‚úÖ Check if JAR exists
        run: |
          if [ ! -f "${{ env.JAR_FILE }}" ]; then
            echo "Error: JAR file '${{ env.JAR_FILE }}' does not exist!"
            exit 1
          fi

      # 7Ô∏è‚É£ Set up Docker Buildx
      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 8Ô∏è‚É£ Login to Docker Registry (Nexus)
      - name: üîë Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.NEXUS_USERNAME }}
          password: ${{ secrets.NEXUS_PASSWORD }}

      # 9Ô∏è‚É£ Build and push Docker image
      - name: üõ†Ô∏è Build and üöÄ Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}
